{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-book-project"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"ls_sf_book_data_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sf_book_data'"
		},
		"linkedService2_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'linkedService2'"
		},
		"ls_bl_book_data_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'ls_bl_book_data'"
		},
		"ls_http_book_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com"
		},
		"ls_sf_book_data_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "BOOKS"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.files",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"preCopyScript": "\n",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "linkedService2",
												"type": "LinkedServiceReference"
											},
											"path": "book"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Book_ID",
														"type": "String"
													},
													"sink": {
														"name": "BOOK_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Book_Title",
														"type": "String"
													},
													"sink": {
														"name": "BOOK_TITLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Author",
														"type": "String"
													},
													"sink": {
														"name": "AUTHOR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Genre",
														"type": "String"
													},
													"sink": {
														"name": "GENRE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Publisher",
														"type": "String"
													},
													"sink": {
														"name": "PUBLISHER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Price",
														"type": "String"
													},
													"sink": {
														"name": "PRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ISBN",
														"type": "String"
													},
													"sink": {
														"name": "ISBN",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_bl_book_data",
											"type": "DatasetReference",
											"parameters": {
												"files": {
													"value": "@replace(item(), '\"', '')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sf_book_data",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "SILVER_BOOK"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"files": {
						"type": "array",
						"defaultValue": [
							"Book.csv",
							"Customer.csv",
							"Date (1).csv",
							"Store.csv",
							"Sales.csv"
						]
					},
					"tables": {
						"type": "array",
						"defaultValue": [
							"Book",
							"Customer",
							"Date",
							"Store",
							"Sales"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T08:08:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_book_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "book"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Book_ID",
											"type": "String"
										},
										"sink": {
											"name": "BOOK_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Book_Title",
											"type": "String"
										},
										"sink": {
											"name": "BOOK_TITLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Author",
											"type": "String"
										},
										"sink": {
											"name": "AUTHOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Genre",
											"type": "String"
										},
										"sink": {
											"name": "GENRE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Publisher",
											"type": "String"
										},
										"sink": {
											"name": "PUBLISHER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String"
										},
										"sink": {
											"name": "PRICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ISBN",
											"type": "String"
										},
										"sink": {
											"name": "ISBN",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "SILVER_BOOK",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T08:08:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_http_copy_book')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.files",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyDataToStorage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_http_book_data",
											"type": "DatasetReference",
											"parameters": {
												"files": {
													"value": "@concat('/sasi1309/books/refs/heads/main/', item())\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText2",
											"type": "DatasetReference",
											"parameters": {
												"files": {
													"value": "@replace(replace(item(), 'Dim_', ''), 'Fact_', '')\n",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"files": {
						"type": "array",
						"defaultValue": [
							"Dim_Book.csv",
							"Dim_Customer.csv",
							"Dim_Date (1).csv",
							"Dim_Store.csv",
							"Fact_Sales.csv"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_http_book_data')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Book.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Book_ID",
						"type": "String"
					},
					{
						"name": "Book_Title",
						"type": "String"
					},
					{
						"name": "Author",
						"type": "String"
					},
					{
						"name": "Genre",
						"type": "String"
					},
					{
						"name": "Publisher",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "ISBN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"files": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().files",
							"type": "Expression"
						},
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "BOOK_ID",
						"type": "VARCHAR"
					},
					{
						"name": "BOOK_TITLE",
						"type": "VARCHAR"
					},
					{
						"name": "AUTHOR",
						"type": "VARCHAR"
					},
					{
						"name": "GENRE",
						"type": "VARCHAR"
					},
					{
						"name": "PUBLISHER",
						"type": "VARCHAR"
					},
					{
						"name": "PRICE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ISBN",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_book_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"files": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().files",
							"type": "Expression"
						},
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_books_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Book.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Book_ID",
						"type": "String"
					},
					{
						"name": "Book_Title",
						"type": "String"
					},
					{
						"name": "Author",
						"type": "String"
					},
					{
						"name": "Genre",
						"type": "String"
					},
					{
						"name": "Publisher",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "ISBN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_customer_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer_ID",
						"type": "String"
					},
					{
						"name": "Customer_Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Age_Group",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "Member_Since",
						"type": "String"
					},
					{
						"name": "Active_Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_date_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Date.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date_ID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Day_of_Week",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Quarter",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_sales_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Sale_ID",
						"type": "String"
					},
					{
						"name": "Customer_ID",
						"type": "String"
					},
					{
						"name": "Book_ID",
						"type": "String"
					},
					{
						"name": "Date_ID",
						"type": "String"
					},
					{
						"name": "Store_ID",
						"type": "String"
					},
					{
						"name": "Quantity_Sold",
						"type": "String"
					},
					{
						"name": "Sale_Amount",
						"type": "String"
					},
					{
						"name": "Discount_Applied",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_http_book_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_book_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"files": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().files",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_book_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_book_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "BOOK_ID",
						"type": "VARCHAR"
					},
					{
						"name": "BOOK_TITLE",
						"type": "VARCHAR"
					},
					{
						"name": "AUTHOR",
						"type": "VARCHAR"
					},
					{
						"name": "GENRE",
						"type": "VARCHAR"
					},
					{
						"name": "PUBLISHER",
						"type": "VARCHAR"
					},
					{
						"name": "PRICE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ISBN",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SILVER_BOOK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMER_ID",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "EMAIL",
						"type": "VARCHAR"
					},
					{
						"name": "AGE_GROUP",
						"type": "VARCHAR"
					},
					{
						"name": "LOCATION",
						"type": "VARCHAR"
					},
					{
						"name": "MEMBER_SINCE",
						"type": "VARCHAR"
					},
					{
						"name": "ACTIVE_STATUS",
						"type": "BOOLEAN"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SILVER_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_date_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "DATE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "DATE",
						"type": "VARCHAR"
					},
					{
						"name": "DAY_OF_WEEK",
						"type": "VARCHAR"
					},
					{
						"name": "MONTH",
						"type": "VARCHAR"
					},
					{
						"name": "YEAR",
						"type": "VARCHAR"
					},
					{
						"name": "QUARTER",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SILVER_DATE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_sales_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "SALE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_ID",
						"type": "VARCHAR"
					},
					{
						"name": "BOOK_ID",
						"type": "VARCHAR"
					},
					{
						"name": "DATE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "QUANTITY_SOLD",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SALE_AMOUNT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "DISCOUNT_APPLIED",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SILVER_SALES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('linkedService2_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_bl_book_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('ls_bl_book_data_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_book_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_book_data_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sf_book_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "jeyvlav-vy43946",
					"user": "ISHITHA",
					"database": "[parameters('ls_sf_book_data_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sf_book_data_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_clean_book_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bl_books_data",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_bl_customer_data",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "ds_bl_date_data",
								"type": "DatasetReference"
							},
							"name": "source3"
						},
						{
							"dataset": {
								"referenceName": "ds_bl_sales_data",
								"type": "DatasetReference"
							},
							"name": "source4"
						},
						{
							"dataset": {
								"referenceName": "ds_bl_store_data",
								"type": "DatasetReference"
							},
							"name": "source5"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sf_book_table",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_sf_customer",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ds_sf_date_silver",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "ds_sf_sales_silver",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "ds_sf_store_silver",
								"type": "DatasetReference"
							},
							"name": "sink5"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Book_ID as string,",
						"          Book_Title as string,",
						"          Author as string,",
						"          Genre as string,",
						"          Publisher as string,",
						"          Price as float,",
						"          ISBN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Email as string,",
						"          Age_Group as string,",
						"          Location as string,",
						"          Member_Since as string,",
						"          Active_Status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source(output(",
						"          Date_ID as string,",
						"          Date as string,",
						"          Day_of_Week as string,",
						"          Month as string,",
						"          Year as string,",
						"          Quarter as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source3",
						"source(output(",
						"          Sale_ID as string,",
						"          Customer_ID as string,",
						"          Book_ID as string,",
						"          Date_ID as string,",
						"          Store_ID as string,",
						"          Quantity_Sold as string,",
						"          Sale_Amount as string,",
						"          Discount_Applied as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source4",
						"source(output(",
						"          Store_ID as string,",
						"          Store_Name as string,",
						"          Store_Location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source5",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          BOOK_ID as string,",
						"          BOOK_TITLE as string,",
						"          AUTHOR as string,",
						"          GENRE as string,",
						"          PUBLISHER as string,",
						"          PRICE as string,",
						"          ISBN as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          BOOK_ID = Book_ID,",
						"          BOOK_TITLE = Book_Title,",
						"          AUTHOR = Author,",
						"          GENRE = Genre,",
						"          PUBLISHER = Publisher,",
						"          PRICE = Price,",
						"          ISBN",
						"     )) ~> sink1",
						"source2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CUSTOMER_ID as string,",
						"          CUSTOMER_NAME as string,",
						"          EMAIL as string,",
						"          AGE_GROUP as string,",
						"          LOCATION as string,",
						"          MEMBER_SINCE as string,",
						"          ACTIVE_STATUS as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          CUSTOMER_ID = Customer_ID,",
						"          CUSTOMER_NAME = Customer_Name,",
						"          EMAIL = Email,",
						"          AGE_GROUP = Age_Group,",
						"          LOCATION = Location,",
						"          MEMBER_SINCE = Member_Since,",
						"          ACTIVE_STATUS = Active_Status",
						"     )) ~> sink2",
						"source3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DATE_ID as string,",
						"          DATE as string,",
						"          DAY_OF_WEEK as string,",
						"          MONTH as string,",
						"          YEAR as string,",
						"          QUARTER as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          DATE_ID = Date_ID,",
						"          DATE = Date,",
						"          DAY_OF_WEEK = Day_of_Week,",
						"          MONTH = Month,",
						"          YEAR = Year,",
						"          QUARTER = Quarter",
						"     )) ~> sink3",
						"source4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SALE_ID as string,",
						"          CUSTOMER_ID as string,",
						"          BOOK_ID as string,",
						"          DATE_ID as string,",
						"          STORE_ID as string,",
						"          QUANTITY_SOLD as string,",
						"          SALE_AMOUNT as string,",
						"          DISCOUNT_APPLIED as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          SALE_ID = Sale_ID,",
						"          CUSTOMER_ID = Customer_ID,",
						"          BOOK_ID = Book_ID,",
						"          DATE_ID = Date_ID,",
						"          STORE_ID = Store_ID,",
						"          QUANTITY_SOLD = Quantity_Sold,",
						"          SALE_AMOUNT = Sale_Amount,",
						"          DISCOUNT_APPLIED = Discount_Applied",
						"     )) ~> sink4",
						"source5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          STORE_ID as string,",
						"          STORE_NAME as string,",
						"          STORE_LOCATION as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          STORE_ID = Store_ID,",
						"          STORE_NAME = Store_Name,",
						"          STORE_LOCATION = Store_Location",
						"     )) ~> sink5"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_books_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_bl_customer_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_bl_date_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_bl_sales_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_bl_store_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_book_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_customer')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_date_silver')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_sales_silver')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_store_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bl_store_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bl_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Store.csv",
						"container": "book"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Store_ID",
						"type": "String"
					},
					{
						"name": "Store_Name",
						"type": "String"
					},
					{
						"name": "Store_Location",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_bl_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_store_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "STORE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_LOCATION",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SILVER_STORE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE Books.Public.raw_Customer;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "book"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bl_customer_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_customer_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE BOOKS.PUBLIC.SILVER_CUSTOMER;\nCALL clean_and_copy_to_silver_customer_data();\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call merge_customer_data();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_customer_data')]",
				"[concat(variables('factoryId'), '/datasets/sf_customer_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_customer_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMER_ID",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "EMAIL",
						"type": "VARCHAR"
					},
					{
						"name": "AGE_GROUP",
						"type": "VARCHAR"
					},
					{
						"name": "LOCATION",
						"type": "VARCHAR"
					},
					{
						"name": "MEMBER_SINCE",
						"type": "VARCHAR"
					},
					{
						"name": "ACTIVE_STATUS",
						"type": "BOOLEAN"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "RAW_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_book')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE BOOKS.PUBLIC.RAW_BOOK",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Book_ID",
											"type": "String"
										},
										"sink": {
											"name": "BOOK_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Book_Title",
											"type": "String"
										},
										"sink": {
											"name": "BOOK_TITLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Author",
											"type": "String"
										},
										"sink": {
											"name": "AUTHOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Genre",
											"type": "String"
										},
										"sink": {
											"name": "GENRE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Publisher",
											"type": "String"
										},
										"sink": {
											"name": "PUBLISHER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String"
										},
										"sink": {
											"name": "PRICE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ISBN",
											"type": "String"
										},
										"sink": {
											"name": "ISBN",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bl_books_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sf_book_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE BOOKS.PUBLIC.SILVER_BOOK;\ncall clean_and_load_silver_book_data()"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call load_gold_book_data();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_books_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_book_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_book_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "BOOK_ID",
						"type": "VARCHAR"
					},
					{
						"name": "BOOK_TITLE",
						"type": "VARCHAR"
					},
					{
						"name": "AUTHOR",
						"type": "VARCHAR"
					},
					{
						"name": "GENRE",
						"type": "VARCHAR"
					},
					{
						"name": "PUBLISHER",
						"type": "VARCHAR"
					},
					{
						"name": "PRICE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ISBN",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "RAW_BOOK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_date')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE table BOOKS.PUBLIC.RAW_date;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date_ID",
											"type": "String"
										},
										"sink": {
											"name": "DATE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Day_of_Week",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_WEEK",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String"
										},
										"sink": {
											"name": "MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String"
										},
										"sink": {
											"name": "YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String"
										},
										"sink": {
											"name": "QUARTER",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bl_date_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sf_date_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE BOOKS.PUBLIC.SILVER_DATE;\ncall clean_and_load_raw_date();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call clean_and_load_gold_date();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_date_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_date_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_date_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "DATE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "DATE",
						"type": "VARCHAR"
					},
					{
						"name": "DAY_OF_WEEK",
						"type": "VARCHAR"
					},
					{
						"name": "MONTH",
						"type": "VARCHAR"
					},
					{
						"name": "YEAR",
						"type": "VARCHAR"
					},
					{
						"name": "QUARTER",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "RAW_DATE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stores')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE BOOKS.PUBLIC.RAW_STORE;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Store_ID",
											"type": "String"
										},
										"sink": {
											"name": "STORE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Store_Name",
											"type": "String"
										},
										"sink": {
											"name": "STORE_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Store_Location",
											"type": "String"
										},
										"sink": {
											"name": "STORE_LOCATION",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bl_store_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sf_stores_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"description": "TRUNCATE TABLE BOOKS.PUBLIC.SILVER_STORE;\ncall clean_and_load_raw_store();",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE BOOKS.PUBLIC.SILVER_STORE;\ncall clean_and_load_raw_store();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call load_gold_store()"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_store_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_stores_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_stores_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "STORE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_LOCATION",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "RAW_STORE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "TRUNCATE TABLE BOOKS.PUBLIC.RAW_SALES;",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sale_ID",
											"type": "String"
										},
										"sink": {
											"name": "SALE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_ID",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Book_ID",
											"type": "String"
										},
										"sink": {
											"name": "BOOK_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date_ID",
											"type": "String"
										},
										"sink": {
											"name": "DATE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Store_ID",
											"type": "String"
										},
										"sink": {
											"name": "STORE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity_Sold",
											"type": "String"
										},
										"sink": {
											"name": "QUANTITY_SOLD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Sale_Amount",
											"type": "String"
										},
										"sink": {
											"name": "SALE_AMOUNT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Discount_Applied",
											"type": "String"
										},
										"sink": {
											"name": "DISCOUNT_APPLIED",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bl_sales_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sf_sales_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "truncate table books.public.silver_sales;\ncall clean_and_load_silver_sales()"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_sf_book_data",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call load_gold_sales_data();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bl_sales_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sf_sales_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sf_sales_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sf_book_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "SALE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMER_ID",
						"type": "VARCHAR"
					},
					{
						"name": "BOOK_ID",
						"type": "VARCHAR"
					},
					{
						"name": "DATE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "STORE_ID",
						"type": "VARCHAR"
					},
					{
						"name": "QUANTITY_SOLD",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SALE_AMOUNT",
						"type": "NUMBER",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DISCOUNT_APPLIED",
						"type": "NUMBER",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "RAW_SALES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sf_book_data')]"
			]
		}
	]
}